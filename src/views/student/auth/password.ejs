<% const dir=process.cwd() %>
<!DOCTYPE html>
<html lang="ko">
<%- include(dir + '/src/views/common/head' ) %>

<body>
  <%- include(dir + '/src/views/common/navbar-student' ) %>
  <!-- bootstrap5 Alert -->
  <div class="alert alert-success d-none" id="alert_box">
    <strong id="alert_mention"></strong>
  </div>
  <div class="container-sm">
    <div class="row mt-1 mb-3">
      <div class="col title text-center fs-1 fw-bold">
        <span>비밀번호 변경</span>
      </div>
      <div class="mt-1 mb-3 d-flex justify-content-center">
        <div class="w-25 border-top border-dark shadow-lg"></div>
      </div>
    </div>
    <div class="row row-cols-1 content border-bottom border-2 bg-light bg-gradient">
      <div class="col mb-3">
        <div class="form-group">
          <div class="form-floating">
            <input type="password" class="form-control" id="currentPassword" placeholder="Password">
            <label for="floatingPassword">현재 비밀번호</label>
            <div class="invalid-feedback">비밀번호가 일치하지 않습니다.</div>
          </div>
        </div>
      </div>
      <div class="col mb-3">
        <div class="form-group">
          <div class="form-floating">
            <input type="password" class="form-control" id="newPassword" placeholder="Password">
            <label for="floatingPassword">새 비밀번호</label>
            <div class="invalid-feedback" id="newPasswordAlert">비밀번호는 8~16자 사이, 영문 대소문자와 숫자를 하나씩 포함하여야 합니다.</div>
            <div class="valid-feedback">사용 가능한 비밀번호입니다.</div>
          </div>
        </div>
      </div>
      <div class="col mb-3">
        <div class="form-group">
          <div class="form-floating">
            <input type="password" class="form-control" id="newPasswordRepeat" placeholder="Password">
            <label for="floatingPassword">새 비밀번호 확인</label>
            <div class="invalid-feedback">입력하신 비밀번호가 서로 다릅니다. 다시 입력해주세요</div>
            <div class="valid-feedback">비밀번호가 일치합니다.</div>
          </div>
        </div>
      </div>
    </div>
    <div class="col d-grid gap-2 mt-2">
      <button class="btn btn-lg btn-primary" type="button" id="submit">저장</button>
    </div>
  </div>
  <%- include(dir + '/src/views/common/footer' ) %>
  <script>
    const inputCurrentPassword = document.querySelector('#currentPassword');
    const inputNewPassword = document.querySelector('#newPassword');
    const inputNewPasswordRepeat = document.querySelector('#newPasswordRepeat');

    // Compare Both new Password
    function comparePassword() {
      if (inputNewPassword.value == inputNewPasswordRepeat.value) {
        inputNewPasswordRepeat.classList.remove('is-invalid');
        inputNewPasswordRepeat.classList.add('is-valid');
      } else {
        inputNewPasswordRepeat.classList.remove('is-valid');
        inputNewPasswordRepeat.classList.add('is-invalid');
      }
    }
    inputNewPasswordRepeat.addEventListener('change', comparePassword);

    //Client Side Password Validation


    function validateNewPassword() {
      const pattern = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)[a-zA-Z\d]{8,16}$/;
      // 8 - 16, at least one number, one lower case, one upper case

      if (pattern.test(inputNewPassword.value)) {
        inputNewPassword.classList.remove('is-invalid');
        inputNewPassword.classList.add('is-valid');
      } else {
        inputNewPassword.classList.remove('is-valid');
        inputNewPassword.classList.add('is-invalid');
      }
    }
    inputNewPassword.addEventListener('change', validateNewPassword);

    // FETCH
    const box = document.querySelector('#alert_box');
    const mention = document.querySelector('#alert_mention');

    function PutPassword() {
      fetch('/student/auth/password', {
          method: 'PUT',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({
            currentPassword: inputCurrentPassword.value,
            newPassword: inputNewPassword.value,
            newPasswordRepeat: inputNewPasswordRepeat.value
          })
        })
        .then((response) => {
          if (response.ok) {
            box.classList.add('d-none');
            inputCurrentPassword.classList.remove('is-invalid');
            return response.json();
          }
          return Promise.reject()
        })
        .then((data) => {
          if (data.success == true && data.match == true) {
            box.classList.remove('alert-danger');
            box.classList.add('alert-success');
            mention.textContent = '정상적으로 비밀번호가 초기화 되었습니다.';
            box.classList.remove('d-none');
            setTimeout(() => {
              location.reload(true);
            }, 900);
          } else if (data.success == false && data.match == true) {
            box.classList.remove('alert-success');
            box.classList.add('alert-danger');
            mention.textContent = '비밀번호 초기화에 실패하였습니다.';
            box.classList.remove('d-none');
          } else if (data.success == true && data.match == false) {
            inputCurrentPassword.classList.add('is-invalid');
          } else {
            box.classList.remove('alert-success');
            box.classList.add('alert-danger');
            mention.textContent = 'ERROR';
            box.classList.remove('d-none');
          }

        })
        .catch((error) => {
          console.error(error);
        })
    }
    const btn = document.querySelector('#submit');
    btn.addEventListener('click', PutPassword);
  </script>


</body>

</html>